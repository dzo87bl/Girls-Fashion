$(document).ready(function() {

	/* nav dropdown menu */
	if ($(window).width() > 768) {
		$('#navbar .nav').removeClass('animated bounceInDown');
		$('ul.nav li.dropdown').hover(function() {
			//$(this).find('.dropdown-menu').stop(true, true).fadeIn();
			//$(this).find('.dropdown-menu').stop(true, true).slideDown();
			$(this).find('.dropdown-menu').removeClass('animated flipOutY').addClass('animated rubberBand');
			$(this).addClass('open');
		}, function() {
			//$(this).find('.dropdown-menu').stop(true, true).fadeOut();
			//$(this).find('.dropdown-menu').stop(true, true).slideUp();
			//$(this).find('.dropdown-menu').removeClass('animated flipInY').addClass('animated flipOutY');
			$(this).removeClass('open');
		});
	} else {
		$('#navbar .nav').addClass('animated bounceInDown');
	}

	/* remove focus from bootstrap btn */
	$('.btn').focus(function(event) {
		event.target.blur();
	});

	/* remove empty p tag */
	$('p').each(function() {
		var $this = $(this);
		if ($this.html().replace(/\s|&nbsp;/g, '').length == 0)
			$this.remove();
	});

	/* remove error image */
	$("img").error(function() {
		$(this).hide();
	});

	/* cart */
	var subtotalPrice;
	function calculateCart() {
		subtotalPrice = parseInt($('.subtotal-price').text());
		$('.subtotal-product-price').each(function(){
			subtotalPrice += parseInt($(this).text());
		});
		$('.subtotal-price').text(subtotalPrice.toFixed(2));
		$('.total-price').text(parseInt(subtotalPrice.toFixed(2)) + (parseInt(subtotalPrice.toFixed(2)) * 11/100));
	}
	
	calculateCart();
	
	$(".plus").click(function(e) {
		e.preventDefault();
		fieldName = $(this).attr("field");
		var currentVal = parseInt($("input[name=" + fieldName + "]").val());
		if (!isNaN(currentVal)) {
			$("input[name=" + fieldName + "]").val(currentVal + 1);
		} else {
			$("input[name=" + fieldName + "]").val(0);
		}
		var currentVal = parseInt($("input[name=" + fieldName + "]").val());
		var price = parseInt($(this).closest('tr').find('.single-price').text());
		var subtotal_product_price = currentVal * price;
		$(this).closest('tr').find('.subtotal-product-price').text(subtotal_product_price.toFixed(2));
		calculateCart();
	});
	
	$(".minus").click(function(e) {
		e.preventDefault();
		fieldName = $(this).attr("field");
		var currentVal = parseInt($("input[name=" + fieldName + "]").val());
		if (!isNaN(currentVal) && currentVal > 0) {
			$("input[name=" + fieldName + "]").val(currentVal - 1);
		} else {
			$("input[name=" + fieldName + "]").val(0);
		}
		var currentVal = parseInt($("input[name=" + fieldName + "]").val());
		var price = parseInt($(this).closest('tr').find('.single-price').text());
		var subtotal_product_price = currentVal * price;
		$(this).closest('tr').find('.subtotal-product-price').text(subtotal_product_price.toFixed(2));
		calculateCart();
	});

	/* delete from cart */
	var pid;
	$('.cart-delete').click(function(e){
		pid = $(this).attr('pid');
	});

	$('.cart-remove').click(function(e){
		var x = document.getElementById('row-' + pid);
		var subtotal_price = parseInt($(x).find('.subtotal-product-price').text());
		$('.subtotal-price').text(subtotalPrice.toFixed(2) - subtotal_price.toFixed(2));
		$('.total-price').text(parseInt(subtotalPrice.toFixed(2)) + (parseInt(subtotalPrice.toFixed(2)) * 11/100));
		$(x).hide(200, function() {
			$(this).remove();
		});
		$('#myModal').modal('hide');
	});

	/* window scroll */
	// $fn.scrollSpeed(step, speed, easing);
	jQuery.scrollSpeed(100, 600);

	/* fancybox */
	$(".fancybox").fancybox({
		openEffect : 'elastic',
		closeEffect : 'elastic',
		helpers : {
			overlay : {
				locked : false
			}
		}
	});

	/* flexslider */
	$('.flexslider').flexslider({
		namespace : "flex-", //{NEW} String: Prefix string attached to the class of every element generated by the plugin
		selector : ".slides > li", //{NEW} Selector: Must match a simple pattern. '{container} > {slide}' -- Ignore pattern at your own peril
		animation : "fade", //String: Select your animation type, "fade" or "slide"
		easing : "swing", //{NEW} String: Determines the easing method used in jQuery transitions. jQuery easing plugin is supported!
		direction : "horizontal", //String: Select the sliding direction, "horizontal" or "vertical"
		reverse : false, //{NEW} Boolean: Reverse the animation direction
		animationLoop : true, //Boolean: Should the animation loop? If false, directionNav will received "disable" classes at either end
		smoothHeight : false, //{NEW} Boolean: Allow height of the slider to animate smoothly in horizontal mode
		startAt : 0, //Integer: The slide that the slider should start on. Array notation (0 = first slide)
		slideshow : true, //Boolean: Animate slider automatically
		slideshowSpeed : 5000, //Integer: Set the speed of the slideshow cycling, in milliseconds
		animationSpeed : 600, //Integer: Set the speed of animations, in milliseconds
		initDelay : 0, //{NEW} Integer: Set an initialization delay, in milliseconds
		randomize : false, //Boolean: Randomize slide order

		// Usability features
		pauseOnAction : true, //Boolean: Pause the slideshow when interacting with control elements, highly recommended.
		pauseOnHover : false, //Boolean: Pause the slideshow when hovering over slider, then resume when no longer hovering
		useCSS : true, //{NEW} Boolean: Slider will use CSS3 transitions if available
		touch : true, //{NEW} Boolean: Allow touch swipe navigation of the slider on touch-enabled devices
		video : false, //{NEW} Boolean: If using video in the slider, will prevent CSS3 3D Transforms to avoid graphical glitches

		// Primary Controls
		controlNav : false, //Boolean: Create navigation for paging control of each clide? Note: Leave true for manualControls usage
		directionNav : true, //Boolean: Create navigation for previous/next navigation? (true/false)
		prevText : "Previous", //String: Set the text for the "previous" directionNav item
		nextText : "Next", //String: Set the text for the "next" directionNav item

		// Secondary Navigation
		keyboard : true, //Boolean: Allow slider navigating via keyboard left/right keys
		multipleKeyboard : false, //{NEW} Boolean: Allow keyboard navigation to affect multiple sliders. Default behavior cuts out keyboard navigation with more than one slider present.
		mousewheel : false, //{UPDATED} Boolean: Requires jquery.mousewheel.js (https://github.com/brandonaaron/jquery-mousewheel) - Allows slider navigating via mousewheel
		pausePlay : false, //Boolean: Create pause/play dynamic element
		pauseText : 'Pause', //String: Set the text for the "pause" pausePlay item
		playText : 'Play', //String: Set the text for the "play" pausePlay item

		// Special properties
		controlsContainer : "", //{UPDATED} Selector: USE CLASS SELECTOR. Declare which container the navigation elements should be appended too. Default container is the FlexSlider element. Example use would be ".flexslider-container". Property is ignored if given element is not found.
		manualControls : "", //Selector: Declare custom control navigation. Examples would be ".flex-control-nav li" or "#tabs-nav li img", etc. The number of elements in your controlNav should match the number of slides/tabs.
		sync : "", //{NEW} Selector: Mirror the actions performed on this slider with another slider. Use with care.
		asNavFor : "", //{NEW} Selector: Internal property exposed for turning the slider into a thumbnail navigation for another slider

		// Carousel Options
		itemWidth : 0, //{NEW} Integer: Box-model width of individual carousel items, including horizontal borders and padding.
		itemMargin : 0, //{NEW} Integer: Margin between carousel items.
		minItems : 0, //{NEW} Integer: Minimum number of carousel items that should be visible. Items will resize fluidly when below this.
		maxItems : 0, //{NEW} Integer: Maxmimum number of carousel items that should be visible. Items will resize fluidly when above this limit.
		move : 0, //{NEW} Integer: Number of carousel items that should move on animation. If 0, slider will move all visible items.

		// Callback API
		start : function() {
		}, //Callback: function(slider) - Fires when the slider loads the first slide
		before : function() {
		}, //Callback: function(slider) - Fires asynchronously with each slider animation
		after : function() {
		}, //Callback: function(slider) - Fires after each slider animation completes
		end : function() {
		}, //Callback: function(slider) - Fires when the slider reaches the last slide (asynchronous)
		added : function() {
		}, //{NEW} Callback: function(slider) - Fires after a slide is added
		removed : function() {
		} //{NEW} Callback: function(slider) - Fires after a slide is removed
	});

	/* typewrite */
	$('#typewriteText').typewrite({
		speed : 12, // typing speed
		blinkSpeed : 2, // blinking speed
		showCursor : true, // show blinking cursor
		blinkingCursor : true, // enable blinking cursor
		cursor : '|', // cursor character
		selectedBackground : '#333', // background color of selected text
		selectedText : '#fff', // font color of selected text
		actions : [{
			type : 'Hello & '
		}, {
			type : 'weclome '
		}, {
			delay : 1500
		}, {
			remove : {
				num : 1,
				type : 'stepped'
			}
		}, {
			select : {
				from : 11,
				to : 16
			}
		}, {
			delay : 2000
		}, {
			remove : {
				num : 5,
				type : 'whole'
			}
		}, {
			delay : 300
		}, {
			type : 'lcome to our magazine and shop for girls. '
		}, {
			type : '<br>'
		}, {
			type : 'Feel free to find something for yourself.'
		}],
		typewriteStarted : function() {
		}, // typewrite has started
		typewriteComplete : function() {
		}, // typewrite has complete
		typewriteTyped : function(event, data) {
		}, // typewrite has typed', data);
		typewriteRemoved : function(event, data) {
		}, // typewrite has removed', data);
		typewriteNewLine : function() {
		}, // typewrite has added a new line
		typewriteSelected : function(event, data) {
		}, // typewrite has selected text', data);
		typewriteDelayEnded : function() {
		} // typewrite delay has ended
	});

});

/* form verify */
function verify() {
	var error = 0;
	var elm = ['name', 'email'];
	for (var i = 0; i < elm.length; i++) {
		if (document.getElementById(elm[i]).value.trim() == null || document.getElementById(elm[i]).value.trim() == '' || document.getElementById(elm[i]).value.trim() == '0') {
			document.getElementById(elm[i]).style.outline = '1px solid red';
			error = 1;
			if (elm[i] == 'country') {
				$('#' + elm[i] + '').selectpicker('setStyle', 'btn-danger');
			}
		} else {
			document.getElementById(elm[i]).style.outline = 'none';
			if (elm[i] == 'country') {
				error = 0;
				$('#' + elm[i] + '').selectpicker('setStyle', 'btn-danger', 'remove');
				$('#' + elm[i] + '').selectpicker('refresh');
			}
		}
		if (elm[i] == 'email') {
			if (document.getElementById('email').value.trim() != '') {
				var emailReg1 = /(@.*@)|(\.\.)|(@\.)|(\.@)|(^\.)/;
				// not valid
				var emailReg2 = /^.+\@(\[?)[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,6}|[0-9]{1,3})(\]?)$/;
				if (!(!emailReg1.test(document.getElementById('email').value) && emailReg2.test(document.getElementById('email').value))) {
					error = 1;
					document.getElementById('email').style.outline = '1px solid red';
				} else {
					error = 0;
					document.getElementById(elm[i]).style.outline = 'none';
				}
			}
		}
	}
	if (error == 0) {
		//alert('OK: ' + error);
		this.form.submit();
		//document.getElementById('{formname}').submit();
	} else {
		//alert('ERROR: ' + error);
		//error=0;
		//alert('All fields are requested!');
		//$('#myModal').show();
		return false;
	}
}